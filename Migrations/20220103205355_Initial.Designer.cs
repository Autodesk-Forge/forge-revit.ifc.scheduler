// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RevitToIfcScheduler.Context;

namespace RevitToIfcScheduler.Migrations
{
    [DbContext(typeof(RevitIfcContext))]
    [Migration("20220103205355_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RevitToIfcScheduler.Models.Account", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("RevitToIfcScheduler.Models.ConversionJob", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DerivativeUrn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForgeUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HubId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfcSettingsSetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InputStorageLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompositeDesign")
                        .HasColumnType("bit");

                    b.Property<string>("ItemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JobCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("JobFinished")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("JobScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutputStorageLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobScheduleId");

                    b.ToTable("ConversionJobs");
                });

            modelBuilder.Entity("RevitToIfcScheduler.Models.IfcSettingsSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IfcSettingsSets");
                });

            modelBuilder.Entity("RevitToIfcScheduler.Models.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cron")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HubId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfcSettingsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastFileCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerializedFileUrns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerializedFolderUrns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZoneId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("RevitToIfcScheduler.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AutodeskId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EncryptedRefresh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EncryptedToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashedSessionKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerializedPermissions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TokenExpiration")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RevitToIfcScheduler.Models.ConversionJob", b =>
                {
                    b.HasOne("RevitToIfcScheduler.Models.Schedule", "JobSchedule")
                        .WithMany()
                        .HasForeignKey("JobScheduleId");

                    b.Navigation("JobSchedule");
                });
#pragma warning restore 612, 618
        }
    }
}
